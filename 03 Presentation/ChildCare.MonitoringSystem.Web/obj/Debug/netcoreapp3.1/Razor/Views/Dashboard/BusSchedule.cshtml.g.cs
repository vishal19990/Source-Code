#pragma checksum "D:\ChildCare\ChildCare\Source Code\03 Presentation\ChildCare.MonitoringSystem.Web\Views\Dashboard\BusSchedule.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7461abccb29bc760bc8234410175ff449dad9612"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_BusSchedule), @"mvc.1.0.view", @"/Views/Dashboard/BusSchedule.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ChildCare\ChildCare\Source Code\03 Presentation\ChildCare.MonitoringSystem.Web\Views\_ViewImports.cshtml"
using ChildCare.MonitoringSystem.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ChildCare\ChildCare\Source Code\03 Presentation\ChildCare.MonitoringSystem.Web\Views\_ViewImports.cshtml"
using ChildCare.MonitoringSystem.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\ChildCare\ChildCare\Source Code\03 Presentation\ChildCare.MonitoringSystem.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7461abccb29bc760bc8234410175ff449dad9612", @"/Views/Dashboard/BusSchedule.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b9c265e513faefe9e45f2a293f15e5f04373ab2", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Dashboard_BusSchedule : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_AdminLeftNavigation", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Choose Bus Id", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\ChildCare\ChildCare\Source Code\03 Presentation\ChildCare.MonitoringSystem.Web\Views\Dashboard\BusSchedule.cshtml"
  
    ViewData["Title"] = "BusSchedule";
    Layout = "_AppLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            DefineSection("LeftNavigation", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7461abccb29bc760bc8234410175ff449dad96125244", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n<!-- MAIN CONTENT-->\r\n<div class=\"main-content\">\r\n\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"<br />
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-md-12"" style=""text-align:center"">
                <div class=""overview-wrap"">
                    <h2 class=""title-1"">
                        Bus Schedule
                    </h2>
                </div>
                <hr />
            </div>
        </div>
        <br />
        <div class=""row"">
            <div class=""col-md-12"">
                <button class=""btn btn-primary col-lg-3 pull-right"" style=""margin-right:5%;"" onclick=""showchangeschedule();"">+ CHANGE SCHEDULE</button>
                <button class=""btn btn-primary col-lg-1 pull-right"" style=""margin-right:5%;"" onclick=""showadd();"">+ ADD</button>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""table-responsive table-responsive-data2"" style=""overflow:auto"">
                    <table class=""table table-data2"" id=""bus"">
                        <thead>
  ");
            WriteLiteral(@"                          <tr>
                                <th>Bus Id</th>
                                <th>Bus Name</th>
                                <th>Bus Driver</th>
                                <th></th>
                            </tr>
                        </thead>
                       
                    </table>
                </div>
            </div>

        </div>


    </div>
</div>

<!--start Account popup-->
<div id=""overlay1"" style=""z-index:4; overflow:scroll"">

    <div id=""schedule""");
            BeginWriteAttribute("class", " class=\"", 1946, "\"", 1954, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n        <div class=\"form-container\">\r\n            <a class=\"pull-right text-primary\" onclick=\"hideschedule();\"><i class=\"fa fa-close\"></i></a>\r\n            <h4 align=\"center\" class=\"text-primary\">Bus Schedule</h4><hr />\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7461abccb29bc760bc8234410175ff449dad96128657", async() => {
                WriteLiteral(@"
                <div class=""form-group"" hidden>
                    <label>Bus Id</label>
                    <input class=""form-control"" type=""text"" name=""busid"" id=""busid"" required>
                </div>
                <div class=""form-group"">
                    <label>Bus Name</label>
                    <input class=""form-control"" type=""text"" name=""bdriverName"" id=""busname"" required>
                </div>
                <div class=""form-group"">
                    <label>Driver Name</label>
                    <input class=""form-control"" type=""text"" name=""bdriverName"" id=""drivername"" required>
                </div>
                <div class=""form-group"">
                    <label>To</label>
                    <input class=""form-control"" type=""text"" name=""to"" id=""busto"" required>
                </div>
                <div class=""form-group"">
                    <label>From</label>
                    <input class=""form-control"" type=""text"" name=""from"" id=""busfrom"" required>
 ");
                WriteLiteral(@"               </div>
                <div class=""form-group"">
                    <label>Time</label>
                    <input class=""form-control"" type=""time"" name=""time"" id=""bustime"" required>
                </div>
                <div class=""form-group"">
                    <label>Date</label>
                    <input class=""form-control"" type=""text"" name=""date"" id=""busdate"" required>
                </div>
                <div class=""form-group"" hidden>
                    <label>Bus Schedule Id</label>
                    <input class=""form-control"" type=""text"" name=""budschedulerid"" id=""budschedulerid"" required>
                </div>
                <button type=""submit"" class=""btn btn-block btn-primary"" id=""BusScheduleupdate"">UPDATE</button>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div id=\"changeschedule\"");
            BeginWriteAttribute("class", " class=\"", 4095, "\"", 4103, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n        <div class=\"form-container\">\r\n            <a class=\"pull-right text-primary\" onclick=\"hidechangeschedule();\"><i class=\"fa fa-close\"></i></a>\r\n            <h3 align=\"center\" class=\"text-primary\">Bus Change Schedule</h3><hr />\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7461abccb29bc760bc8234410175ff449dad961212503", async() => {
                WriteLiteral("\r\n                <div class=\"form-group\">\r\n                    <label>Bus Id</label>\r\n                    <select id=\"getbusid\" class=\"form-control\" onchange=\"filldetails()\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7461abccb29bc760bc8234410175ff449dad961212975", async() => {
                    WriteLiteral("Choose Bus Id to swap");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    </select>\r\n");
                WriteLiteral(@"                </div>
                <div class=""col-lg-12"" style=""display: flex"">
                    <div class=""form-group col-lg-6"">
                        <label>Destination Name</label>
                        <input class=""form-control"" type=""text"" name=""destination"" id=""destination"" required readonly>
                    </div>
                    <div class=""form-group col-lg-6"">
                        <label>Source Name</label>
                        <input class=""form-control"" type=""text"" name=""source"" id=""source"" required readonly>
                    </div>
                </div>
                <div class=""form-group"">
                    <label>Time</label>
                    <input class=""form-control"" type=""text"" name=""time"" id=""scheduletime"" required readonly>
                </div>
                <div class=""form-group"">
                    <label>Date</label>
                    <input class=""form-control"" type=""text"" name=""date"" id=""scheduledate"" required readonly>");
                WriteLiteral(@"
                </div>
                <div class=""form-group"">
                    <label>Add New Bus</label>
                    <select id=""getnewbusid"" class=""form-control"">
                        
                    </select>
                </div>
                <button type=""submit"" class=""btn btn-block btn-primary"" id=""BusScheduleSwap"" onclick=""BusScheduleSwap()"">CHANGE</button>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"add\"");
            BeginWriteAttribute("class", " class=\"", 6279, "\"", 6287, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n        <div class=\"form-container\">\r\n            <a class=\"pull-right\" href=\" \"><i class=\"fa fa-close\"></i></a>\r\n            <h4 align=\"center\" class=\"text-primary\">Add Bus</h4><hr />\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7461abccb29bc760bc8234410175ff449dad961218053", async() => {
                WriteLiteral(@"
                <div class=""form-group"">
                    <label>Bus Name</label>
                    <input class=""form-control"" type=""text"" name=""bname"" id=""bname"" required>
                </div>
                <div class=""form-group"">
                    <label>Bus DriverName</label>
                    <input class=""form-control"" type=""text"" name=""dname"" id=""dName"" required>
                </div>
");
                WriteLiteral("                <button type=\"submit\" class=\"btn btn-block btn-primary\" id=\"busupdate\">Add</button>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        //Get bus to select box
        $.ajax({

            url: '/Bus/BusGetByIdCompareWithBusSchedule',
            type: 'post',
            dataType: 'json',
            data:
            {
            },
            success: function (result) {

                if (result) {
                    var busVal = '';

                    for (i = 0; i < result.length; i++) {
                        busVal += '<option value=""' + result[i] + '"">' + result[i] + '</option>';
                    }
                    $('#getbusid').append(busVal);
                }
            },
        });


        $.ajax({

            url: '/Bus/GetBusWithNoSchedule',
            type: 'post',
            dataType: 'json',
            data:
            {
            },
            success: function (result) {

                if (result) {
                    var busVal = '<option value=""Choose New Bus Id"" selected disabled>Add New Bus Id</option>';

                    for");
                WriteLiteral(@" (i = 0; i < result.length; i++) {
                        busVal += '<option value=""' + result[i] + '"">' + result[i] + '</option>';
                    }
                    $('#getnewbusid').append(busVal);
                }
                else {
                    var busVal = '<option selected disabled>All Bus are scheduled</option>';
                    $('#getnewbusid').append(busVal);
                }
            },
        });
     

        
        function search(string) {
            window.find(string);
        }

        function showschedule(id) {
            var busScheduleid = id;
            //alert(id);
            $('#schedule').animate({ top: '2%' }, 500);
            $('.account-dropdown').hide();

            $.ajax({

                url: '/BusSchedule/BusGetById',
                type: 'get',
                dataType: 'json',
                data:
                {
                    id: busScheduleid,
                },
                success: fu");
                WriteLiteral(@"nction (result) {
                    //debugger
                    document.getElementById('destination').value = result.busScheduleDriverName;
                    document.getElementById('source').value = result.busName;
                    document.getElementById('bustime').value = result.toBusSchedule;
                    document.getElementById('busdate').value = result.fromBusSchedule;
                    document.getElementById('bustime').value = result.busScheduleTime;
                    document.getElementById('busdate').value = result.busScheduleDate;
                    document.getElementById('busid').value = result.busId;
                    document.getElementById('budschedulerid').value = result.busScheduleId;
                }
            });
            document.getElementById(""overlay1"").style.display = ""block"";

        }

        //function BusScheduleSwap()
        //{
        //    var busid = $(""#getbusid"").val();
        //    var newbusid = $(""#getnewbusid"").val()");
                WriteLiteral(@";
        //    var tobus = $(""#destination"").val();
        //    var frombus = $(""#source"").val();
        //    var bustime = $(""#scheduletime"").val();
        //    var busdate = $(""#scheduledate"").val();
        //    var driver = ""kaa"";
        //    alert(""hii"");
        //    $.ajax({
        //        url: '/BusSchedule/AddBusSchedule',
        //        type: 'post',
        //        dataType: 'json',
        //        data:
        //        {
        //            BusScheduleDriverName:driver,             
        //           ToBusSchedule: tobus,
        //           FromBusSchedule: frombus,
        //           BusScheduleTime: bustime,
        //           BusScheduleDate: busdate,
        //           BusId: newbusid,
        //        },
        //        success: function (result) {
        //            //$.ajax({
        //            //    url: '/BusSchedule/DeleteBusSchedule',
        //            //    type: 'post',
        //            //    dataType: 'json");
                WriteLiteral(@"',
        //            //    data:
        //            //    {
        //            //        id: busid,
        //            //    },
        //            //    success: function (result) {
        //            //        alert(""Successfully inserted Bus schedule"");
        //            //    },
        //            //}); 
        //        },
        //    }); 
        //}

        function filldetails() {
            var busid = $(""#getbusid"").val();

            $.ajax({

                url: '/BusSchedule/GetBusDetailsById',
                type: 'get',
                dataType: 'json',
                data:
                {
                    id: busid,
                },
                success: function (result) {
                    //debugger
                    document.getElementById('destination').value = result.toBusSchedule;
                    document.getElementById('source').value = result.fromBusSchedule;
                    document.getElementById('s");
                WriteLiteral(@"cheduledate').value = result.busScheduleDate;
                    document.getElementById('scheduletime').value = result.busScheduleTime;
                }
            });
            document.getElementById(""overlay1"").style.display = ""block"";

        }

        function hideschedule() {
            $('#schedule').animate({ top: '-500%' }, 500);
            window.location.reload('~/Dashboard/BusSchedule');
            document.getElementById(""overlay1"").style.display = ""none"";

        }

        function showchangeschedule() {

            $('#changeschedule').animate({ top: '2%' }, 500);
            //$('.account-dropdown').hide();

            //$.ajax({

            //    url: '/BusSchedule/BusGetById',
            //    type: 'get',
            //    dataType: 'json',
            //    data:
            //    {
            //        id: busScheduleid,
            //    },
            //    success: function (result) {
            //        //debugger
            //      ");
                WriteLiteral(@"  document.getElementById('drivername').value = result.busScheduleDriverName;
            //        document.getElementById('busname').value = result.busName;
            //        document.getElementById('busto').value = result.toBusSchedule;
            //        document.getElementById('busfrom').value = result.fromBusSchedule;
            //        document.getElementById('bustime').value = result.busScheduleTime;
            //        document.getElementById('busdate').value = result.busScheduleDate;
            //        document.getElementById('busid').value = result.busId;
            //        document.getElementById('budschedulerid').value = result.busScheduleId;
            //    }
            //});
            document.getElementById(""overlay1"").style.display = ""block"";
        }

        function hidechangeschedule() {
            $('#changeschedule').animate({ top: '-500%' }, 500);
            window.location.reload('~/Dashboard/BusSchedule');
            document.getElementById(");
                WriteLiteral(@"""overlay1"").style.display = ""none"";

        }

        function showadd() {
            $('#add').animate({ top: '2%' }, 500);
            $('.account-dropdown').hide();
            document.getElementById(""overlay1"").style.display = ""block"";
        }
        function hideadd() {
            $('#add').animate({ top: '-500%' }, 500);
            document.getElementById(""overlay1"").style.display = ""none"";

        }


    </script>
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '/BusSchedule/GetBusDetail',
                type: 'get',
                dataType: 'json',
                success: function (result) {
                    //debugger
                    if (result) {
                        var bus = ' <tbody>';
                        for (var i = 0; i < result.length; i++) {
                            //bus += '<tr class=""tr-shadow""><td class=""ds"" value=""' + result[i].busId + '"">' + result[i].busId + '</td><td>' + result[i");
                WriteLiteral(@"].busName + '</td><td>' + result[i].busDriverName + '</td><td><div class=""table-data-feature""><button onclick=""show();"" title=""Send Message"" class=""btn btn-primary""><a onclick=""showschedule(' + result[i].busScheduleId + ' ); "">Schedule</a></button></div></td></tr>';
                            bus += '<tr class=""tr-shadow""><td class=""ds"" value=""' + result[i].busId + '"">' + result[i].busId + '</td><td>' + result[i].busName + '</td><td>' + result[i].busDriverName + '</td></tr>';
                        }
                        bus += '</tbody>'

                        $('#bus').append(bus);

                    }
                    else {
                        alert(""failed to get data"");
                    }

                },

            });
            $(""#busupdate"").click(function () {

                var dName = $(""#dName"").val();
                //var bto = $(""#bto"").val();
                //var bfrom = $(""#bfrom"").val();
                //var btime = $(""#btime"").val();
    ");
                WriteLiteral(@"            //var bdate = $(""#bdate"").val();
                var bname = $(""#bname"").val();

                //alert(dName);
                //alert(bto);

                $.ajax({
                    url: '/Bus/AddBus',
                    type: 'post',
                    dataType: 'json',
                    data:
                    {
                        BusName: bname,
                        BusDriverName: dName,
                        //ToBusSchedule: bto,
                        //FromBusSchedule: bfrom,
                        //BusScheduleTime: btime,
                        //BusScheduleDate: bdate,
                    },
                    //debugger
                    success: function (result) {
                        //debugger;
                        //alert(""Also Successfully inserted Bus Schedule"");
                        //var busId = result;
                        //$.ajax({
                        //    url: '/BusSchedule/AddBusSchedule',
             ");
                WriteLiteral(@"           //    type: 'post',
                        //    dataType: 'json',
                        //    data:
                        //    {
                        //        BusScheduleDriverName: dName,
                        //        ToBusSchedule: bto,
                        //        FromBusSchedule: bfrom,
                        //        BusScheduleTime: btime,
                        //        BusScheduleDate: bdate,
                        //        BusId: busId,
                        //    },
                        //    success: function (result) {
                        //        alert(""Successfully inserted Bus schedule"");
                        //    },
                        //}); alert(""hello"");
                    },
                }); alert(""Successfully inserted Bus"");
            });

            $(""#BusScheduleSwap"").click(function () {
                alert(""hi"");
                var busid = $(""#getbusid"").val();
                var newbusid = $(""#g");
                WriteLiteral(@"etnewbusid"").val();
                var tobus = $(""#destination"").val();
                var frombus = $(""#source"").val();
                var bustime = $(""#scheduletime"").val();
                var busdate = $(""#scheduledate"").val();
                var driver = ""kaa"";
                
                $.ajax({
                    url: '/BusSchedule/AddBusSchedule',
                    type: 'post',
                    dataType: 'json',
                    data:
                    {
                        BusScheduleId:busid,
                        BusScheduleDriverName: driver,
                        ToBusSchedule: tobus,
                        FromBusSchedule: frombus,
                        BusScheduleTime: bustime,
                        BusScheduleDate: busdate,
                        BusId: newbusid,
                    },
                    success: function (result) {
                        //$.ajax({
                        //    url: '/busschedule/DeleteBusSchedule',");
                WriteLiteral(@"
                        //    type: 'post',
                        //    datatype: 'json',
                        //    data:
                        //    {
                        //        id: busid,
                        //    },
                        //    success: function (result) {
                        //        alert(""successfully inserted bus schedule"");
                        //    },
                        //}); 
                        alert(""successfully inserted bus schedule"");
                    },
                }); 
            });

            $(""#BusScheduleupdate"").click(function () {
                var busid = $('#busid').val();
                var budschedulerid = $('#budschedulerid').val();
                var busname = $('#busname').val();
                var drivername = $('#drivername').val();
                var to = $('#busto').val();
                var from = $('#busfrom').val();
                var time = $('#bustime').val();
             ");
                WriteLiteral(@"   var date = $('#busdate').val();

                //alert(busid);
                //alert(budschedulerid);
                //alert(busname);

                var Bus = {
                    BusId: busid,
                    BusName: busname,
                }


                $.ajax({

                    url: '/BusSchedule/BusScheduleUpdate',
                    type: 'post',
                    dataType: 'json',
                    data: {
                        BusScheduleId: budschedulerid,
                        BusScheduleDriverName: drivername,
                        ToBusSchedule: to,
                        FromBusSchedule: from,
                        BusScheduleTime: time,
                        BusScheduleDate: date,
                        busName: busname,
                        BusId: busid,

                        Bus: Bus,

                    },
                    success: function (result) {
                        alert(""Updated successfully"");
  ");
                WriteLiteral("                      //location.reload();\r\n                    },\r\n                });\r\n            });\r\n        });\r\n    </script>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral(@"
    <style>


        #overlay1 {
            position: fixed; /* Sit on top of the page content */
            display: none; /* Hidden by default */
            width: 100%; /* Full width (cover the whole page) */
            height: 100%; /* Full height (cover the whole page) */
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5); /* Black background with opacity */
            z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
            cursor: pointer; /* Add a pointer on hover */
            overflow: scroll;
        }

        #schedule {
            position: absolute;
            top: -500%;
            width: 37%;
            margin-left: 30%;
            background-color: white;
            box-shadow: 2px 3px 8px slategrey;
            border-radius: 5px;
            padding: 35px;
            overflow: auto;
        }

        #changesche");
                WriteLiteral(@"dule {
            position: absolute;
            top: -500%;
            width: 42%;
            margin-left: 30%;
            background-color: white;
            box-shadow: 2px 3px 8px slategrey;
            border-radius: 5px;
            padding: 35px;
            overflow: auto;
        }

        #add {
            position: fixed;
            top: -500%;
            width: 35%;
            margin-left: 30%;
            background-color: white;
            box-shadow: 2px 3px 8px slategrey;
            border-radius: 5px;
            padding: 35px;
            overflow: auto;
        }

        #test-form-div {
            position: fixed;
            top: -500%;
            max-width: 1500px;
            max-height: 1500px;
            min-width: 1500px;
            min-height: 1500px;
            background-color: black;
        }

        form.example input[type=text] {
            padding: 8px;
            font-size: 17px;
            border: 1px solid grey;
");
                WriteLiteral(@"            float: left;
            width: 70%;
            height: 60%;
            background: white;
        }

        form.example button {
            float: left;
            width: 20%;
            height: 70%;
            padding: 5px;
            background: #2196F3;
            color: white;
            font-size: 17px;
            border: 1px solid grey;
            border-left: none;
            cursor: pointer;
        }

            form.example button:hover {
                background: #0b7dda;
            }

        form.example::after {
            content: """";
            clear: both;
            display: table;
        }
    </style>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
